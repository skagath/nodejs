name: Deploy Node.js App to EC2 via Docker and ECR

on:
  push:
    branches:
      - main  # Trigger the workflow when pushing to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code from GitHub
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.jsY
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPO_URI }}:${{ github.sha }} .
        
      # Log in to AWS ECR
      - name: Log in to Amazon ECR
        run: |
          aws --version
          # aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URI }}
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 654654498256.dkr.ecr.us-east-1.amazonaws.com
          

      # Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # SSH into EC2 and pull Docker image
      - name: Deploy Dockerized app to EC2
        run: |
          echo "Deploying to EC2"
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@${{ secrets.EC2_PUBLIC_IP }} <<EOF
            docker pull ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}
            docker stop node-app || true
            docker rm node-app || true
            docker run -d --name node-app -p 3000:3000 ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}
          EOF
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
